# MediaPipe graph to detect palms with TensorFlow Lite on GPU.

type: "IsWashingGpu"

# GPU image. (GpuBuffer)
input_stream: "IMAGE_GPU:image"

output_stream: "CLASSIFICATIONS:washing_status"

output_stream: "IMAGE_GPU:rotated_image"

node {
   calculator: "ImageCroppingCalculator"
   input_stream: "IMAGE_GPU:image"
   output_stream: "IMAGE_GPU:cropped_image"
   options: {
       [mediapipe.ImageCroppingCalculatorOptions.ext] {
            norm_width: 1.0
            norm_height: 0.75
       }
   }
}

node {
  calculator: "ImageTransformationCalculator"
  input_stream: "IMAGE_GPU:cropped_image"
  output_stream: "IMAGE_GPU:rotated_image"
  options: {
    [mediapipe.ImageTransformationCalculatorOptions.ext] {
      output_width: 480
      output_height: 360
      rotation_mode: ROTATION_90
    }
  }
}

# Transforms an image into a 320x240 tensor while keeping the aspect ratio, and
# therefore may result in potential letterboxing.
node {
  calculator: "ImageToTensorCalculator"
  input_stream: "IMAGE_GPU:cropped_image"
  output_stream: "TENSORS:input_tensor"
  output_stream: "LETTERBOX_PADDING:letterbox_padding"
  options: {
    [mediapipe.ImageToTensorCalculatorOptions.ext] {
      output_tensor_width: 320
      output_tensor_height: 240
      keep_aspect_ratio: true
      output_tensor_float_range {
        min: 0
        max: 255
      }
      border_mode: BORDER_ZERO
      gpu_origin: TOP_LEFT
    }
  }
}

# Runs a TensorFlow Lite model on GPU that takes an image tensor and outputs a
# vector of tensors representing, for instance, detection boxes/keypoints and
# scores.
node {
  calculator: "InferenceCalculator"
  input_stream: "TENSORS:input_tensor"
  output_stream: "TENSORS:classification_tensor"
  options: {
    [mediapipe.InferenceCalculatorOptions.ext] {
      model_path: "mediapipe/modules/hand_washing/is_washing.tflite"
    }
  }
}

# Converts the handedness tensor into a float that represents the classification
# score of handedness.
node {
  calculator: "TensorsToClassificationCalculator"
  input_stream: "TENSORS:classification_tensor"
  output_stream: "CLASSIFICATIONS:washing_status"
  options: {
    [mediapipe.TensorsToClassificationCalculatorOptions.ext] {
      top_k: 1
      label_map_path: "mediapipe/modules/hand_washing/washing_status.txt"
    }
  }
}
